// --------------------------------------------------------------------------------------------------------------------
// <copyright file="Initializers.cs" company="Naos">
//   Copyright 2015 Naos
// </copyright>
// <auto-generated>
//   Sourced from NuGet package. Will be overwritten with package update except in Naos.Recipes source.
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace Naos.Recipes.TupleInitializers
{
    using System;
    using System.Collections.Generic;

    #if !NaosRecipesTupleInitializers
        [System.Diagnostics.DebuggerStepThrough]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        [System.CodeDom.Compiler.GeneratedCode("Naos.Recipes.TupleInitializers", "See package version number")]
    #endif
    /// <summary>
    /// Tuple initializers.
    /// </summary>
    internal static class Initializers
    {
        /// <summary>
        /// Adds a <see cref="Tuple{T1}"/> to an <see cref="ICollection{T}"/>.
        /// </summary>
        /// <typeparam name="T1">The type of the first component of the tuple.</typeparam>
        /// <param name="collection">The collection to add to.</param>
        /// <param name="item1">The value of the first component of the tuple.</param>
        public static void Add<T1>(this ICollection<Tuple<T1>> collection, T1 item1)
        {
            collection.Add(Tuple.Create(item1));
        }

        /// <summary>
        /// Adds a <see cref="Tuple{T1, T2}"/> to an <see cref="ICollection{T}"/>.
        /// </summary>
        /// <typeparam name="T1">The type of the first component of the tuple.</typeparam>
        /// <typeparam name="T2">The type of the second component of the tuple.</typeparam>
        /// <param name="collection">The collection to add to.</param>
        /// <param name="item1">The value of the first component of the tuple.</param>
        /// <param name="item2">The value of the second component of the tuple.</param>
        public static void Add<T1, T2>(this ICollection<Tuple<T1, T2>> collection, T1 item1, T2 item2)
        {
            collection.Add(Tuple.Create(item1, item2));
        }

        /// <summary>
        /// Adds a <see cref="Tuple{T1, T2, T3}"/> to an <see cref="ICollection{T}"/>.
        /// </summary>
        /// <typeparam name="T1">The type of the first component of the tuple.</typeparam>
        /// <typeparam name="T2">The type of the second component of the tuple.</typeparam>
        /// <typeparam name="T3">The type of the third component of the tuple.</typeparam>
        /// <param name="collection">The collection to add to.</param>
        /// <param name="item1">The value of the first component of the tuple.</param>
        /// <param name="item2">The value of the second component of the tuple.</param>
        /// <param name="item3">The value of the third component of the tuple.</param>
        public static void Add<T1, T2, T3>(this ICollection<Tuple<T1, T2, T3>> collection, T1 item1, T2 item2, T3 item3)
        {
            collection.Add(Tuple.Create(item1, item2, item3));
        }

        /// <summary>
        /// Adds a <see cref="Tuple{T1, T2, T3, T4}"/> to an <see cref="ICollection{T}"/>.
        /// </summary>
        /// <typeparam name="T1">The type of the first component of the tuple.</typeparam>
        /// <typeparam name="T2">The type of the second component of the tuple.</typeparam>
        /// <typeparam name="T3">The type of the third component of the tuple.</typeparam>
        /// <typeparam name="T4">The type of the fourth component of the tuple.</typeparam>
        /// <param name="collection">The collection to add to.</param>
        /// <param name="item1">The value of the first component of the tuple.</param>
        /// <param name="item2">The value of the second component of the tuple.</param>
        /// <param name="item3">The value of the third component of the tuple.</param>
        /// <param name="item4">The value of the fourth component of the tuple.</param>
        public static void Add<T1, T2, T3, T4>(this ICollection<Tuple<T1, T2, T3, T4>> collection, T1 item1, T2 item2, T3 item3, T4 item4)
        {
            collection.Add(Tuple.Create(item1, item2, item3, item4));
        }

        /// <summary>
        /// Adds a <see cref="Tuple{T1, T2, T3, T4, T5}"/> to an <see cref="ICollection{T}"/>.
        /// </summary>
        /// <typeparam name="T1">The type of the first component of the tuple.</typeparam>
        /// <typeparam name="T2">The type of the second component of the tuple.</typeparam>
        /// <typeparam name="T3">The type of the third component of the tuple.</typeparam>
        /// <typeparam name="T4">The type of the fourth component of the tuple.</typeparam>
        /// <typeparam name="T5">The type of the fifth component of the tuple.</typeparam>
        /// <param name="collection">The collection to add to.</param>
        /// <param name="item1">The value of the first component of the tuple.</param>
        /// <param name="item2">The value of the second component of the tuple.</param>
        /// <param name="item3">The value of the third component of the tuple.</param>
        /// <param name="item4">The value of the fourth component of the tuple.</param>
        /// <param name="item5">The value of the fifth component of the tuple.</param>
        public static void Add<T1, T2, T3, T4, T5>(this ICollection<Tuple<T1, T2, T3, T4, T5>> collection, T1 item1, T2 item2, T3 item3, T4 item4, T5 item5)
        {
            collection.Add(Tuple.Create(item1, item2, item3, item4, item5));
        }

        /// <summary>
        /// Adds a <see cref="Tuple{T1, T2, T3, T4, T5, T6}"/> to an <see cref="ICollection{T}"/>.
        /// </summary>
        /// <typeparam name="T1">The type of the first component of the tuple.</typeparam>
        /// <typeparam name="T2">The type of the second component of the tuple.</typeparam>
        /// <typeparam name="T3">The type of the third component of the tuple.</typeparam>
        /// <typeparam name="T4">The type of the fourth component of the tuple.</typeparam>
        /// <typeparam name="T5">The type of the fifth component of the tuple.</typeparam>
        /// <typeparam name="T6">The type of the sixth component of the tuple.</typeparam>
        /// <param name="collection">The collection to add to.</param>
        /// <param name="item1">The value of the first component of the tuple.</param>
        /// <param name="item2">The value of the second component of the tuple.</param>
        /// <param name="item3">The value of the third component of the tuple.</param>
        /// <param name="item4">The value of the fourth component of the tuple.</param>
        /// <param name="item5">The value of the fifth component of the tuple.</param>
        /// <param name="item6">The value of the sixth component of the tuple.</param>
        public static void Add<T1, T2, T3, T4, T5, T6>(this ICollection<Tuple<T1, T2, T3, T4, T5, T6>> collection, T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6)
        {
            collection.Add(Tuple.Create(item1, item2, item3, item4, item5, item6));
        }

        /// <summary>
        /// Adds a <see cref="Tuple{T1, T2, T3, T4, T5, T6, T7}"/> to an <see cref="ICollection{T}"/>.
        /// </summary>
        /// <typeparam name="T1">The type of the first component of the tuple.</typeparam>
        /// <typeparam name="T2">The type of the second component of the tuple.</typeparam>
        /// <typeparam name="T3">The type of the third component of the tuple.</typeparam>
        /// <typeparam name="T4">The type of the fourth component of the tuple.</typeparam>
        /// <typeparam name="T5">The type of the fifth component of the tuple.</typeparam>
        /// <typeparam name="T6">The type of the sixth component of the tuple.</typeparam>
        /// <typeparam name="T7">The type of the seventh component of the tuple.</typeparam>
        /// <param name="collection">The collection to add to.</param>
        /// <param name="item1">The value of the first component of the tuple.</param>
        /// <param name="item2">The value of the second component of the tuple.</param>
        /// <param name="item3">The value of the third component of the tuple.</param>
        /// <param name="item4">The value of the fourth component of the tuple.</param>
        /// <param name="item5">The value of the fifth component of the tuple.</param>
        /// <param name="item6">The value of the sixth component of the tuple.</param>
        /// <param name="item7">The value of the seventh component of the tuple.</param>
        public static void Add<T1, T2, T3, T4, T5, T6, T7>(this ICollection<Tuple<T1, T2, T3, T4, T5, T6, T7>> collection, T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7)
        {
            collection.Add(Tuple.Create(item1, item2, item3, item4, item5, item6, item7));
        }
    }
}
